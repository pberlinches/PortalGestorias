@using System.Security.Claims
@using PortalGestorias.Web.Controllers
@using PortalGestorias.Web.Security
@using PortalGestorias.Domain.Models

@model PortalGestorias.Domain.Entities.Producto

@{
    ViewBag.Title = "John Deere - Sistema de Inventario ::: Producto";
    <style type="text/css">
        label {
            text-align: left !important;
        }
    </style>

    var title = "Editar";
    var action = "Edit";

    if (Model.Id <= 0)
    {
        title = "Crear";
        action = "Create";
    }

    var viewOnly = ViewBag.ViewOnly != null && ViewBag.ViewOnly;
    dynamic htmlAttributes = new { @class = "form-control" };
    dynamic htmlAttributesMarca = new { @class = "form-control", data_val = "true", data_val_required = $"El campo Marca es obligatorio." };
    dynamic htmlAttributesTipoModelo = new { @class = "form-control", data_val = "true", data_val_required = $"El campo Tipo es obligatorio." };
    dynamic htmlAttributesAlmacen = new { @class = "form-control", data_val = "true", data_val_required = $"El campo Almacén es obligatorio." };
    dynamic htmlAttributesModelo = new { @class = "form-control", data_val = "true", data_val_required = $"El campo Modelo es obligatorio." };
    dynamic htmlAttributesUbicacion = new { @class = "form-control", data_val = "true", data_val_required = $"El campo Ubicación es obligatorio." };
    dynamic htmlAttributesStockRoom = new { @class = "form-control", data_val = "true", data_val_required = $"El campo StockRoom es obligatorio." };
    dynamic htmlAttributesEstado= new { @class = "form-control", data_val = "true", data_val_required = $"El campo Estado es obligatorio." };
    dynamic htmlAttributesUsuarioAlta = new { @class = "form-control", data_val = "true", data_val_required = $"El campo Usuario Alta es obligatorio." };


    if (viewOnly)
    {
        htmlAttributes = new { @class = "form-control", disabled = "disabled" };
        htmlAttributesMarca = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Marca es obligatorio." };
        htmlAttributesTipoModelo = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Tipo es obligatorio." };
        htmlAttributesAlmacen = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Almacén es obligatorio." };
        htmlAttributesModelo = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Modelo es obligatorio." };
        htmlAttributesUbicacion = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Ubicación es obligatorio." };
        htmlAttributesStockRoom = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo StockRoom es obligatorio." };
        htmlAttributesEstado = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Estado es obligatorio." };
        htmlAttributesUsuarioAlta = new { @class = "form-control", disabled = "disabled", data_val = "true", data_val_required = $"El campo Usuario Alta es obligatorio." };
    }
    var user = User as ClaimsPrincipal;
}

@using (Html.BeginForm(action))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb custom-breadcrumb">
                    <li class="breadcrumb-item titulo1">@Html.ActionLink("SISTEMAS", "Index", "Home")</li>
                    <li class="breadcrumb-item titulo1">@Html.ActionLink("PRODUCTOS", "Index", "Productos")</li>
                    <li class="breadcrumb-item titulo1 active">CONSULTA PRODUCTO</li>
                </ol>
            </nav>
        </div>
        <div class="col-md-9">
            <div class="form-group">
                @Html.LabelFor(model => model.CodigoBarras, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.CodigoBarras, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.CodigoBarras, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroSerie, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.NumeroSerie, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.NumeroSerie, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Almacen.Nombre, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdAlmacen", (SelectList)ViewData["Almacen"], (object)htmlAttributesAlmacen)
                    @Html.ValidationMessage("IdAlmacen", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StockRoom, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdStockRoom", (SelectList)ViewData["StockRoom"], (object)htmlAttributesStockRoom)
                    @Html.ValidationMessage("IdStockRoom", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Marca.Nombre, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdMarca", (SelectList)ViewData["Marca"], (object)htmlAttributesMarca)
                    @Html.ValidationMessage("IdMarca", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ubicacion.Nombre, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdUbicacion", (SelectList)ViewData["Ubicacion"], (object)htmlAttributesUbicacion)
                    @Html.ValidationMessage("IdUbicacion", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Modelo, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdModelo", (SelectList)ViewData["Modelo"], (object)htmlAttributesModelo)
                    @Html.ValidationMessage("IdModelo", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdEstado", (SelectList)ViewData["Estado"], (object)htmlAttributesEstado)
                    @Html.ValidationMessage("IdEstado", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroPedido, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.NumeroPedido, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.NumeroPedido, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaEntrada, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.EditorFor(model => model.FechaEntrada, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.FechaEntrada, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaEntrega, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.FechaEntrega, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.FechaEntrega, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FechaBaja, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.FechaBaja, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.FechaBaja, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Destinatario, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-3">
                    @Html.EditorFor(model => model.Destinatario, new { htmlAttributes })
                    @Html.ValidationMessageFor(model => model.Destinatario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsuarioAlta, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })<span class="mandatory">*</span>
                <div class="col-md-3">
                    @Html.DropDownList("IdUsuarioAlta", (SelectList)ViewData["UsuarioAlta"], (object)htmlAttributesUsuarioAlta)
                    @Html.ValidationMessage("IdUsuarioAlta", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsuarioEntrega, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-3">
                    @Html.DropDownList("IdUsuarioEntrega", (SelectList)ViewData["UsuarioEntrega"], (object)htmlAttributes)
                    @Html.ValidationMessage("IdUsuarioEntrega", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsuarioBaja, htmlAttributes: new { @class = "control-label col-md-2 col-md-offset-1" })
                <div class="col-md-3">
                    @Html.DropDownList("IdUsuarioBaja", (SelectList)ViewData["UsuarioBaja"], (object)htmlAttributes)
                    @Html.ValidationMessage("IdUsuarioBaja", "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-3 col-md-9">
                    @Html.ActionLink("Volver al listado", "Index", null, new { @class = "btn btn-default" })
                    @if (viewOnly && Model.Activo && user.ResourceAccessValidation(DataOperation.Update, Controllers.Productos))
                    {
                        @Html.ActionLink("Editar", "Edit", new { id = Model.Id }, new { @class = "btn btn-jd-new" })
                    }
                    @if (!viewOnly)
                    {
                        <input type="submit" value="Guardar" name="Guardar" class="btn btn-jd-new" />

                    }
                </div>
            </div>
        </div>
        </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        $('document').ready(function () {
            controlDate('#FechaEntrada');
        });

        $(document).on('change', '#IdMarca', function () {
            var selectItem = $('#IdMarca').val();
            if (selectItem != '') {
                var url = '@Html.Raw(Url.Action("Edit", "Productos", new { idMarca = "selectItem"}))';

                url = url.replace("selectItem", selectItem);
                window.location = url;
            }

        });


        $(function () {

            $('input[type="submit"].btn').on('dblclick',
                function (event) {
                    event.preventDefault();
                });
        });

         
    </script>
}
